name: 'tauri-action'
description: 'Build tauri binaries for MacOS, Windows and Linux'
icon: 'download-cloud'
color: 'blue'
author: 'Lucas Nogueira <lucas@tauri.studio>'
inputs:
  releaseId:
    description: 'The id of the release to upload artifacts as release assets'
  tagName:
    description: 'The tag name of the release to create or upload to'
  releaseName:
    description: 'The name of the release to create'
  releaseBody:
    description: 'The body of the release to create'
  releaseDraft:
    description: 'Whether the release to create is a draft or not'
    default: 'false'
  prerelease:
    description: 'Whether the release to create is a prerelease or not'
    default: 'false'
  releaseCommitish:
    description: 'Any branch or commit SHA the Git tag is created from, unused if the Git tag already exists. Default: SHA of current commit'
  projectPath:
    description: 'Path to the root of the project that will be built'
    default: '.'
  distPath:
    description: 'Path to the distributable folder with your index.html and JS/CSS'
  iconPath:
    description: 'Path to the PNG icon to use as app icon, relative to the projectPath'
  appName:
    description: 'The app name to inject when initializing the Tauri app. Required if the name is not set via the `--config` flag.'
  appVersion:
    description: 'The app version to inject when initializing the Tauri app. Required if the version is not set via the `--config` flag.'
  includeDebug:
    description: 'Whether to include a debug build or not'
    default: 'false'
  includeRelease:
    description: 'Whether to include a release build or not'
    default: 'true'
  mobile:
    description: 'Toggle between desktop and mobile builds, use includeDebug and includeRelease to switch between release and debug builds. Set it to `true` to enable iOS builds on macOS runners and Android builds on Ubuntu runners. Set it to `android` to enable Android builds on all runners. `ios` behaves the same as `true` and only works on macOS runners. Note that this setting, especially for iOS, is currently considered unstable!'
    default: false
  includeUpdaterJson:
    description: 'Whether to upload a static JSON file for the updater using GitHub Releases as the CDN'
    default: 'true'
  updaterJsonPreferNsis:
    description: 'Whether the action will use the NSIS (setup.exe) or WiX (.msi) bundles for the updater JSON if both types exist. Will default to false. May default to true for apps using tauri@v2 in the future.'
  updaterJsonKeepUniversal:
    description: 'Whether the updater JSON file should add universal macOS as darwin-universal on top of using it in the darwin-aarch64 and darwin-x86_64 fields if no native builds exist.'
    default: 'false'
  tauriScript:
    description: 'The script to run to build the Tauri app'
  args:
    description: 'Arguments for the `tauri build` command'
  retryAttempts:
    description: 'The number of times to re-try building the app if the initial build fails. For now this only affects `tauri build` but may include the upload steps in the future.'
  bundleIdentifier:
    description: 'The bundle identifier to inject when initializing the Tauri app'
  owner:
    description: 'The account owner of the repository'
  repo:
    description: 'The name of the repository'
outputs:
  releaseId:
    description: 'The ID of the created release'
  releaseHtmlUrl:
    description: 'The URL users can navigate to in order to view the created release'
  releaseUploadUrl:
    description: 'The URL for uploading assets to the created release'
  artifactPaths:
    description: 'The paths of the generated artifacts'
  appVersion:
    description: 'The version of the app'
runs:
  using: 'node20'
  main: 'dist/index.js'
